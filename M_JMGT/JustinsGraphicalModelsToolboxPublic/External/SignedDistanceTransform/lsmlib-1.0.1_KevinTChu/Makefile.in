##
## File:        Makefile.in
## Copyrights:  (c) 2005 The Trustees of Princeton University and Board of
##                  Regents of the University of Texas.  All rights reserved.
##              (c) 2009 Kevin T. Chu.  All rights reserved.
## Revision:    $Revision: 149 $
## Modified:    $Date: 2009-01-18 00:31:09 -0800 (Sun, 18 Jan 2009) $
## Description: top-level makefile for level set method library
##              (builds archive files)
##

SRC_DIR = @top_srcdir@
VPATH = @top_srcdir@
BUILD_DIR = @builddir@
include $(BUILD_DIR)/config/Makefile.config

# Set MAKE
@SET_MAKE@

all:  library 

directories:
	if [ ! -d "include" ]; then @MKDIR@ include; fi
	if [ ! -d "lib" ]; then @MKDIR@ lib; fi

includes:  directories
	@CP@ config/LSMLIB_config.h include
	cd src; @MAKE@ $@ || exit 1


library:  directories includes 
	cd src; @MAKE@ $@ || exit 1
	@MAKE@ lsm_toolbox || exit 1
	@MAKE@ lsm_serial || exit 1
	if [ ! -z "@LSMLIB_PARALLEL@" ]; then                             \
	  @MAKE@ lsm_parallel || exit 1;                                  \
	fi
	if [ ! -z "@matlab_dir@" ]; then                                  \
	  @MAKE@ matlab || exit 1;                                        \
	fi


lsm_toolbox:
	@FIND@ src/toolbox -name "*.o" > objs_file.tmp
	# remove test code
	@SED@ -e '/test/d' objs_file.tmp > objs_file_no_test.tmp 
	@MV@ -f objs_file_no_test.tmp objs_file.tmp
	cat objs_file.tmp | @XARGS@ @AR@ -ru $(BUILD_DIR)/lib/liblsm_toolbox.a 
	@RANLIB@ lib/liblsm_toolbox.a
	@RM@ objs_file.tmp 


lsm_serial:
	@FIND@ src/serial -name "*.o" > objs_file.tmp
	# remove test code
	@SED@ -e '/test/d' objs_file.tmp > objs_file_no_test.tmp 
	@MV@ -f objs_file_no_test.tmp objs_file.tmp
	cat objs_file.tmp | @XARGS@ @AR@ -ru $(BUILD_DIR)/lib/liblsm_serial.a 
	@RANLIB@ lib/liblsm_serial.a
	@RM@ objs_file.tmp 


lsm_parallel:
	@FIND@ src/parallel -name "*.o" > objs_file.tmp
	# remove test code
	@SED@ -e '/test/d' objs_file.tmp > objs_file_no_test.tmp 
	@MV@ -f objs_file_no_test.tmp objs_file.tmp
	cat objs_file.tmp | @XARGS@ @AR@ -ru $(BUILD_DIR)/lib/liblsm_parallel.a 
	@RANLIB@ lib/liblsm_parallel.a
	@RM@ objs_file.tmp 


INSTALL_DIR = @prefix@

install:
	@INSTALL@ -d -m 755 $(INSTALL_DIR)/lib
	@INSTALL@ -d -m 755 $(INSTALL_DIR)/include
	@INSTALL@ -d -m 755 $(INSTALL_DIR)/share/LSMLIB
	@INSTALL@ -c -m 644 $(SRC_DIR)/LICENSE $(INSTALL_DIR)/share/LSMLIB
	@INSTALL@ -d -m 755 $(INSTALL_DIR)/share/LSMLIB/config
	@INSTALL@ -c -m 644 config.status $(INSTALL_DIR)/share/LSMLIB/config
	@INSTALL@ -c -m 644 config/Makefile.config $(INSTALL_DIR)/share/LSMLIB/config
	@SED@ 's/BUILD_DIR/LSMLIB_DIR/' $(INSTALL_DIR)/share/LSMLIB/config/Makefile.config > Makefile.config.install;                                   \
	@MV@ Makefile.config.install $(INSTALL_DIR)/share/LSMLIB/config/Makefile.config;                                                                \
	for i in include/*; do                                          \
	  @INSTALL@ -c -m 644 $$i $(INSTALL_DIR)/include;               \
	done
	if test -f lib/liblsm_toolbox.a; then                           \
	  for i in lib/*.a; do                                          \
	    @INSTALL@ -c -m 644 $$i $(INSTALL_DIR)/lib;                 \
	    @RANLIB@ $(INSTALL_DIR)/$$i;                                \
	  done                                                          \
	fi
	if test -f lib/liblsm_toolbox.so; then                          \
	  for i in lib/*.so; do                                         \
	    @INSTALL@ -c -m 644 $$i $(INSTALL_DIR)/lib;                 \
	    @RANLIB@ $(INSTALL_DIR)/$$i;                                \
	  done                                                          \
	fi
	if test -d $(SRC_DIR)/doc/lsmlib-dox; then                            \
  	@CP@ -r $(SRC_DIR)/doc/lsmlib-dox $(INSTALL_DIR)/share/LSMLIB/doc;  \
  fi
	@CP@ -r $(BUILD_DIR)/examples $(INSTALL_DIR)/share/LSMLIB/
	@FIND@ $(INSTALL_DIR) -name Makefile > examples_makefiles.tmp
	for i in `cat examples_makefiles.tmp`; do                       \
	  @AWK@ '$$1=="BUILD_DIR" && $$2=="=" {$$3 = "$(INSTALL_DIR)"} {print}' $$i > $$i.install;           \
	  @MV@ $$i.install $$i;                                         \
	  @AWK@ '$$1=="include" && $$2=="$$(BUILD_DIR)/config/Makefile.config" {$$2 = "$(INSTALL_DIR)/share/LSMLIB/config/Makefile.config"} {print}' $$i > $$i.install;           \
	  @MV@ $$i.install $$i;                                         \
	  @SED@ 's/BUILD_DIR/LSMLIB_DIR/' $$i > $$i.install;            \
	  @MV@ $$i.install $$i;                                         \
	done
	@RM@ examples_makefiles.tmp


dox:
	cd $(SRC_DIR)/doc/doxygen; doxygen Doxyfile

cleandox:
	if [ -d "doc/lsmlib-dox" ]; then @RM@ -r doc/lsmlib-dox; fi


mex:  matlab

matlab:
	if [ ! -z "@matlab_dir@" ]; then                                  \
	  cd src/matlab; @MAKE@ library || exit 1;                        \
	else                                                              \
	  echo "";                                                        \
	  echo "LSMLIB configured without MATLAB...unable to generate";   \
	  echo "MEX files";                                               \
	  echo "";                                                        \
	fi

clean:
	cd src; @MAKE@ $@ || exit 1
	@RM@ *.o
	@RM@ *.tmp

spotless: clean cleandox
	cd src; @MAKE@ $@ || exit 1
	cd examples; @MAKE@ $@ || exit 1
	if [ -d "include" ]; then @RM@ -rf include/*; rmdir include; fi
	if [ -d "lib" ]; then @RM@ -rf lib/*; rmdir lib; fi

