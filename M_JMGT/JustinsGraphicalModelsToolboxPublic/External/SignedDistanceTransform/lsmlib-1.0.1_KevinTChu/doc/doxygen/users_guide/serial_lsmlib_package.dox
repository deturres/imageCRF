
/*!
  @page users_guide_serial_lsmlib_package Serial LSMLIB Package

<hr>
<center>
<table border="0">
<tr>
<td width="15%" align="left">
@ref users_guide_overview "Previous" 
</td>
<td width="70%" align="center">
@ref lsmlib_users_guide "Table of Contents"
</td>
<td width="15%" align="right">
@ref users_guide_parallel_lsmlib_package "Next" 
</td>
</tr>
</table>
</center>

<hr>
\section serial_introduction Introduction
The Serial LSMLIB Package provides support for carrying out level set method 
calculations using a single processor.  It is a C library that provides 
high-level wrappers for many of the functions in the 
@ref users_guide_lsmlib_toolbox_package "LSMLIB Toolbox Package" as
well as auxilliary functions to support many calculations common to serial
level set method simulations (e.g. grid and data management).
Specifically, the Serial LSMLIB Package provides C data structures and 
functions for:

  - management of the computational grid and data arrays;
  - initialization of the level set function for several simple geomtries;
  - application of common boundary conditions;
  - computation of the distance function and extension fields
    using fast marching methods; and
  - general utility functions (e.g. copying data, computing the max norm
    of a grid function, etc.).


<hr>
\section serial_usage Usage
The Serial LSMLIB Package has been designed to be minimize the time required
for an application developer to implement a level set method simulation.  
The simplest way to develop a level set method simulation based on the 
serial level set method package is to first write code for computing the
velocity field that is used to evolve the level set function and then to use 
the following procedure in the main program:

-# Set up grid and data arrays using functions from @ref lsm_grid.h and 
   @ref lsm_data_arrays.h.
-# Initialize the level set functions using the functions in 
   @ref lsm_initialization2d.h or @ref lsm_initialization3d.h or
   by writing custom initialization code for your particular application.
-# Evolve the level set functions in time by 
   -# imposing boundary conditions for all field variables;  
      several common boundary conditions for level set functions
      are provided in @ref lsm_boundary_conditions2d.h and 
      @ref lsm_boundary_conditions3d.h.
   -# computing the velocity field for the current time
   -# computing a stable time step to take; functions for computing
      stable time steps for advection and normal velocity driven 
      motion (of hyperbolic character) are available in 
      @ref lsm_utilities1d.h, @ref lsm_utilities2d.h, and
      @ref lsm_utilities3d.h.
   -# advancing the level set functions by a single time step using
      the TVD Runge-Kutta time integration functions provided in the
      @ref users_guide_lsmlib_toolbox_package "LSMLIB Toolbox Package"
   -# periodically reinitializing the level set functions
-# Postprocess and visualize results.


The Serial LSMLIB Package also provides support for fast marching method
calculations.  To carry out a fast marching method calculation, step 3
in the above algorithm is replaced by a call to the appropriate
computeDistanceFunction() or computeExtensionFields() function in 
@ref lsm_fast_marching_method.h.


Example serial level set method calculations implemented using these 
procedures are provided in the examples/serial directory.  The 
reinitialization_example also demonstrates the use of lsm_options which may 
be helpful for managing the options/parameters passed into a simulation via 
an input file.


<hr>
\section serial_grid_management Grid and Data Array Management
<strong>Under development...</strong>


<hr>
\section serial_boundary_conditions Boundary Conditions
<strong>Under development...</strong>


<hr>
\section serial_fast_marching_method Fast Marching Method
<strong>Under development...</strong>


<hr>
\section serial_initialization Level Set Function Initialization Functions
<strong>Under development...</strong>


<hr>
\section serial_utilities Utility Functions/Macros
<strong>Under development...</strong>


<hr>
<center>
<table border="0">
<tr>
<td width="15%" align="left">
@ref users_guide_overview "Previous" 
</td>
<td width="70%" align="center">
@ref lsmlib_users_guide "Table of Contents"
</td>
<td width="15%" align="right">
@ref users_guide_parallel_lsmlib_package "Next" 
</td>
</tr>
</table>
</center>

*/
