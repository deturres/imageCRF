/*
 * File:        manual.dox
 * Package:     LSMLIB Doxygen manual
 * Copyrights:  (c) 2005 The Trustees of Princeton University and Board of
 *                  Regents of the University of Texas.  All rights reserved.
 *              (c) 2009 Kevin T. Chu.  All rights reserved.
 * Revision:    $Revision: 160 $
 * Modified:    $Date: 2009-02-12 00:57:21 -0800 (Thu, 12 Feb 2009) $
 * Description: Generation of LSMLIB Doxygen source code manual
 */

namespace LSMLIB {

/*!
  @page package_lsm_toolbox LSMLIB Toolbox Package

  The LSMLIB Toolbox package provides the numerical kernels that form
  the core components of many level set method simulations.  Specifically,
  the LSMLIB Toolbox package provides routines for:

  - calculation of high-order ENO/WENO spatial derivatives;
  - TVD Runge-Kutta time integration;
  - imposing common boundary conditions;
  - computing geometry quantities;
  - integrating over regions defined by implicit functions;
  - fast maching method calculations;
  - computing the right-hand side of specific level set method partial 
    differential equations; and
  - general utility functions (e.g. computing a stable time step 
    size using a CFL based criterion and computing the max norm 
    of the difference of two field variables).

  Both Fortran and C interfaces are available for all of the core components 
  except for the fast marching method kernels, which only have C interfaces.


  <h3> High-order Spatial Derivatives </h3>

  @ref lsm_spatial_derivatives1d.h, @ref lsm_spatial_derivatives2d.h, 
  and @ref lsm_spatial_derivatives3d.h provide support for computing 
  spatial derivatives using the following high-order spatial discretizations:  
  ENO1, ENO2, ENO3, and WENO5.


  <h3> Total Variation Diminishing Runge-Kutta Time Integration </h3>

  @ref lsm_tvd_runge_kutta1d.h, @ref lsm_tvd_runge_kutta2d.h, 
  and @ref lsm_tvd_runge_kutta3d.h provide support for first-, second- 
  and third-order TVD Runge-Kutta time integration.


  <h3> Boundary Conditions </h3>

  @ref lsm_boundary_conditions1d.h, @ref lsm_boundary_conditions2d.h, 
  and @ref lsm_boundary_conditions3d.h, provide support for imposing
  homogeneous Neumann boundary conditions and a few different 
  extrapolation boundary conditions.  


  <h3> Geometric Calculations </h3>

  @ref lsm_geometry1d.h, @ref lsm_geometry2d.h, and @ref lsm_geometry3d.h
  provide support for computing unit normal vectors and other geometric
  quantities (such as the surface area of the zero level set).


  <h3> Fast Marching Method </h3>

  @ref FMM_Core.h, @ref FMM_Callback_API.h, and @ref FMM_Heap.h provide 
  support for computing distance functions and extending field variables 
  off of the zero level set using first-order accurate fast marching methods.  
  When higher-order accuracy is required, the user can provide special 
  implementations of the callback API in defined in @ref FMM_Callback_API.h 
  and directly call the core fast marching method functions in @ref FMM_Core.h.


  <h3> RHS Routines </h3>

  The LSMLIB Toolbox also provides subroutines for computing the right-hand
  side of the most common partial differential equations that govern the
  evolution of level set functions.

  - @ref lsm_level_set_evolution1d.h, @ref lsm_level_set_evolution2d.h, 
    @ref lsm_level_set_evolution3d.h
  - @ref lsm_field_extension1d.h, @ref lsm_field_extension2d.h, 
    @ref lsm_field_extension3d.h
  - @ref lsm_reinitialization1d.h, @ref lsm_reinitialization2d.h, 
    @ref lsm_reinitialization3d.h


  <h3> Basic Utilities </h3>

  @ref lsm_utilities1d.h, @ref lsm_utilities2d.h, @ref lsm_utilities3d.h,
  and @ref lsm_calculus_toolbox.h provide basic utility subroutines, such
  as computing the max norm of the difference of two field variables
  and the stable time step size for advection-like problems.

*/

}
